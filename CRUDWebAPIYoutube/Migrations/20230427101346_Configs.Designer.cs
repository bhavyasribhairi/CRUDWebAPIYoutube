// <auto-generated />
using System;
using CRUDWebAPIYoutube.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRUDWebAPIYoutube.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230427101346_Configs")]
    partial class Configs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRUDWebAPIYoutube.Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<long>("Phone")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("816f70bc-7f5a-4b7c-9ae0-0e3cc37db9a0"),
                            Address = "Old post office street",
                            Email = "ram@gmail.com",
                            FullName = "Ram",
                            Phone = 987238642942L
                        },
                        new
                        {
                            Id = new Guid("88bfe5d0-a564-4f08-a9e2-69cb1d2b94d3"),
                            Address = "Rajahmundry",
                            Email = "chandha@gmail.com",
                            FullName = "Chand",
                            Phone = 987238642942L
                        },
                        new
                        {
                            Id = new Guid("be001a26-3788-4b03-8320-704fadb48f3d"),
                            Address = "Nuzvid",
                            Email = "mohit@gmail.com",
                            FullName = "Mohit",
                            Phone = 9872228642942L
                        });
                });

            modelBuilder.Entity("CRUDWebAPIYoutube.Models.Details", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("AadharNumber")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("PanNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Details");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d9e233a-fd21-4eef-a27e-054e84c0c7f1"),
                            AadharNumber = 345345345345L,
                            ContactId = new Guid("816f70bc-7f5a-4b7c-9ae0-0e3cc37db9a0"),
                            PanNumber = 123123123123L
                        },
                        new
                        {
                            Id = new Guid("1f087157-1c26-447f-af4d-06d1676824b9"),
                            AadharNumber = 345345345345L,
                            ContactId = new Guid("88bfe5d0-a564-4f08-a9e2-69cb1d2b94d3"),
                            PanNumber = 567545464454L
                        },
                        new
                        {
                            Id = new Guid("42f3c01d-a632-4cb4-9bb1-b50514683381"),
                            AadharNumber = 345345345345L,
                            ContactId = new Guid("be001a26-3788-4b03-8320-704fadb48f3d"),
                            PanNumber = 567545464454L
                        });
                });

            modelBuilder.Entity("CRUDWebAPIYoutube.Models.Image", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("CRUDWebAPIYoutube.Models.Details", b =>
                {
                    b.HasOne("CRUDWebAPIYoutube.Models.Contact", "contact")
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("contact");
                });
#pragma warning restore 612, 618
        }
    }
}
